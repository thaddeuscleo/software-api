version: '3'

services:
  software_backend_api:
    container_name: software_backend_api
    image: software_backend_api:1.0.1
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - ${SERVICE_PORT}:${SERVICE_PORT}
    networks:
      - software-api-net
    depends_on:
      - 'rabbitmq'
      - 'postgres'
      - 'minio'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  postgres:
    container_name: postgres
    image: postgres:12
    networks:
      - software-api-net
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq_broker
    image: rabbitmq:management-alpine
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - software-api-net
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  minio:
    image: minio/minio
    volumes:
      - minio_storage:/data
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    networks:
      - software-api-net

networks:
  software-api-net:
    driver: bridge

volumes:
  pgdata:
    external: true
  minio_storage:
    external: true
  rabbitmq:
    external: true
