# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateFileInput {
  file: Upload!

  """File Name"""
  name: String!
}

input CreateMasterInput {
  """Master Name"""
  masterName: String!

  """Master Rooms"""
  rooms: [String!] = []

  """Master Softwares"""
  softwares: [String!] = []
}

input CreateRoomInput {
  """Room Id"""
  id: String = ""

  """Room Master Id"""
  masterId: String!

  """Room Number"""
  roomNumber: String!

  """Room softwares Id"""
  softwares: [String!] = []
}

input CreateSemesterInput {
  """Define semester is currently active"""
  isActive: Boolean!

  """Semester Name"""
  semesterName: String!

  """List of softwares id"""
  softwares: [String!]
}

input CreateSoftwareInput {
  """Software current Installer"""
  currentLicense: String!

  """Software Group"""
  group: String!

  """Software installer location"""
  installerPath: String!

  """Is Software Licensed"""
  license: String!

  """Master(s) Id"""
  masters: [String!]!

  """Software notes"""
  note: String!

  """Number of license"""
  numberOfLicense: Int!

  """List Of Rooms Id"""
  rooms: [String!] = []

  """Semester Id"""
  semesterId: String!

  """Software Name"""
  softwareName: String!

  """Software Version"""
  version: String!
}

type File {
  etag: String!
  lastModified: String!

  """File Name"""
  name: String!
  size: Int!
}

type Master {
  """Master ID"""
  id: String!

  """Master Name"""
  masterName: String!

  """Master Name"""
  rooms: [Room!]!

  """Master Name"""
  softwares: [Software!]!
}

input MasterFind {
  """Master Id"""
  id: String

  """Master Name"""
  masterName: String
}

type Mutation {
  createMaster(createMasterInput: CreateMasterInput!): Master!
  createRoom(createRoomInput: CreateRoomInput!): Room!
  createSemester(createSemesterInput: CreateSemesterInput!): Semester!
  createSoftware(createSoftwareInput: CreateSoftwareInput!): Software!
  removeMaster(id: String!): Master!
  removeRoom(id: String!): Room!
  removeSemester(id: String!): Semester!
  removeSoftware(id: String!): Software!
  updateMaster(updateMasterInput: UpdateMasterInput!): Master!
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!
  updateSemester(updateSemesterInput: UpdateSemesterInput!): Semester!
  updateSoftware(updateSoftwareInput: UpdateSoftwareInput!): Software!
  uploadFile(createFileInput: CreateFileInput!): Boolean!
}

type Query {
  files: [File!]!
  master(id: String!): Master!
  masters(find: MasterFind = {}, skip: Int, take: Int): [Master!]!
  room(id: String!): Room!
  roomCount: Int!
  rooms(skip: Int, take: Int): [Room!]!
  semester(id: String!): Semester!
  semesters: [Semester!]!
  software(id: String!): Software!
  softwareCount: Int!
  softwares(find: SoftwareFind = {}, skip: Int, take: Int): [Software!]!
}

type Room {
  """Room identifier In UUID"""
  id: String!

  """room master Type"""
  master: Master!

  """Room Number"""
  roomNumber: String!

  """Room softwares"""
  softwares: [Software!]!
}

type Semester {
  """Semester ID"""
  id: String!

  """Is current semester"""
  isActive: Boolean!

  """Semester Name"""
  semesterName: String!

  """Semester softwares"""
  softwares: [Software!]!
}

type Software {
  """Current license"""
  currentLicense: String!

  """Software Group"""
  group: String!

  """Software Identifier"""
  id: String!

  """Software installer location"""
  installerPath: String!

  """Is Software Licensed"""
  license: String!

  """Software is available in room"""
  masters: [Master!]!

  """Software notes"""
  note: String!

  """Number of license"""
  numberOfLicense: Int!

  """Software in room"""
  rooms: [Room!]!

  """Software is record in semester"""
  semester: Semester!

  """Software Name"""
  softwareName: String!

  """Software Version"""
  version: String!
}

input SoftwareFind {
  """Software Identifier"""
  id: String

  """Software Name"""
  softwareName: String
}

input UpdateMasterInput {
  id: String!

  """Master Name"""
  masterName: String

  """Master Rooms"""
  rooms: [String!] = []

  """Master Softwares"""
  softwares: [String!] = []
}

input UpdateRoomInput {
  """Room identifier In UUID"""
  id: String!

  """Room Master Id"""
  masterId: String

  """Room Number"""
  roomNumber: String

  """Room softwares Id"""
  softwares: [String!]
}

input UpdateSemesterInput {
  """Semester ID"""
  id: String!

  """Define semester is currently active"""
  isActive: Boolean

  """Semester Name"""
  semesterName: String

  """List of softwares id"""
  softwares: [String!]
}

input UpdateSoftwareInput {
  """Software current Installer"""
  currentLicense: String

  """Software Group"""
  group: String

  """Software Identifier"""
  id: String!

  """Software installer location"""
  installerPath: String

  """Is Software Licensed"""
  license: String

  """Master Id"""
  masterId: String

  """Master(s) Id"""
  masters: [String!]

  """Software notes"""
  note: String

  """Number of license"""
  numberOfLicense: Int

  """List Of Rooms Id"""
  rooms: [String!] = []

  """Semester Id"""
  semesterId: String

  """Software Name"""
  softwareName: String

  """Software Version"""
  version: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload