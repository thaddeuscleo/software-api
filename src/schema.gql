# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateMasterInput {
  """Master Name"""
  masterName: String!

  """Master Rooms"""
  rooms: [String!] = []

  """Master Softwares"""
  softwares: [String!] = []
}

input CreateRoomInput {
  """Room Id"""
  id: String = ""

  """Room Master Id"""
  masterId: String!

  """Room Number"""
  roomNumber: String!

  """Room softwares Id"""
  softwares: [String!] = []
}

input CreateSoftwareInput {
  """Software current Installer"""
  currentLicense: String!

  """Software Group"""
  group: String!

  """Software installer location"""
  installerPath: String!

  """Is Software Licensed"""
  license: String!

  """Master Id"""
  masterId: String!

  """Software notes"""
  note: String!

  """Number of license"""
  numberOfLicense: Int!

  """List Of Rooms Id"""
  rooms: [String!] = []

  """Semester Id"""
  semesterId: String!

  """Software Name"""
  softwareName: String!

  """Software Version"""
  version: String!
}

type Master {
  """Master ID"""
  id: String!

  """Master Name"""
  masterName: String!

  """Master Name"""
  rooms: [Room!]!

  """Master Name"""
  softwares: Software!
}

input MasterFind {
  """Master Id"""
  id: String

  """Master Name"""
  masterName: String
}

type Mutation {
  createMaster(createMasterInput: CreateMasterInput!): Master!
  createRoom(createRoomInput: CreateRoomInput!): Room!
  createSoftware(createSoftwareInput: CreateSoftwareInput!): Software!
  removeMaster(id: String!): Master!
  removeRoom(id: String!): Room!
  removeSoftware(id: String!): Software!
  updateMaster(updateMasterInput: UpdateMasterInput!): Master!
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!
  updateSoftware(updateSoftwareInput: UpdateSoftwareInput!): Software!
}

type Query {
  master(id: String!): Master!
  masters(find: MasterFind = {}, skip: Int, take: Int): [Master!]!
  room(id: String!): Room!
  roomCount: Int!
  rooms(skip: Int, take: Int): [Room!]!
  software(id: String!): Software!
  softwareCount: Int!
  softwares(find: SoftwareFind = {}, skip: Int, take: Int): [Software!]!
}

type Room {
  """Room identifier In UUID"""
  id: String!

  """Room Number"""
  roomNumber: String!

  """Room softwares"""
  software: [Software!]!
  softwares: [Software!]!
}

type Software {
  """Current license"""
  currentLicense: String!

  """Software Group"""
  group: String!

  """Software Identifier"""
  id: String!

  """Software installer location"""
  installerPath: String!

  """Is Software Licensed"""
  license: String!

  """Software notes"""
  note: String!

  """Number of license"""
  numberOfLicense: Int!

  """Software in room"""
  rooms: [Room!]!

  """Software Name"""
  softwareName: String!

  """Software Version"""
  version: String!
}

input SoftwareFind {
  """Software Identifier"""
  id: String

  """Software Name"""
  softwareName: String
}

input UpdateMasterInput {
  id: String!

  """Master Name"""
  masterName: String

  """Master Rooms"""
  rooms: [String!] = []

  """Master Softwares"""
  softwares: [String!] = []
}

input UpdateRoomInput {
  """Room identifier In UUID"""
  id: String!

  """Room Master Id"""
  masterId: String

  """Room Number"""
  roomNumber: String

  """Room softwares Id"""
  softwares: [String!]
}

input UpdateSoftwareInput {
  """Software current Installer"""
  currentLicense: String

  """Software Group"""
  group: String

  """Software Identifier"""
  id: String!

  """Software installer location"""
  installerPath: String

  """Is Software Licensed"""
  license: String

  """Master Id"""
  masterId: String

  """Software notes"""
  note: String

  """Number of license"""
  numberOfLicense: Int

  """List Of Rooms Id"""
  rooms: [String!] = []

  """Semester Id"""
  semesterId: String

  """Software Name"""
  softwareName: String

  """Software Version"""
  version: String
}